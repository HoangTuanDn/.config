"  ____
" |  _ \ _ __
" | | | | '_ \
" | |_| | | | |
" |____/|_| |_|

" =================================================
" Plugin 
set ideajoin
set surround
set easymotion
set highlightedyank
set NERDTree

" =================================================
" Common set "
set idearefactormode=keep
set showmode
set number relativenumber         " line numbers
set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard

" set <leader> to <space>
let mapleader = " "
" =============================================
" map
noremap <Esc> <nop>
nmap <S-Enter> o<Esc>
"nmap <CR> o<Esc>
nmap <leader>v :vsp<CR>
nmap <leader>s :sp<CR>

" don't lose selection when indenting
vnoremap < <gv
vnoremap > >gv
vnoremap = =gv

" use find
inoremap <C-f> <Action>(Find)

" scrolling
nmap <leader>d <C-d>
nmap <leader>u <C-u>
vmap <leader>d <C-d>
vmap <leader>u <C-u>

" Tab navigation
map <Tab> <Action>(NextTab)
map <S-Tab> <Action>(PreviousTab)

" Navigate project errors
map [e <Action>(GotoPreviousError)
map ]e <Action>(GotoNextError)
nmap <leader>e <action>(ShowErrorDescription)

" Bye bye
map <leader>q <Action>(CloseContent)
map <leader>Q <Action>(CloseAllEditors)
map <leader>h <Action>(HideAllWindows)
nmap <leader>bd <action>(CloseEditor)

" menu content
nmap <leader>m <Action>(ShowPopupMenu)

" Move selected lines and keep selection on these lines
vnoremap J :action MoveLineDown<CR>
vnoremap K :action MoveLineUp<CR>
inoremap <C-j> <Esc>:m +1<CR>gi
inoremap <C-k> <Esc>:m -2<CR>gi

" NERDTree
let g:NERDTreeMapActivateNode='l'
let g:NERDTreeMapJumpParent='h'

" highlightedyank
let g:highlightedyank_highlight_duration = "500"
let g:highlightedyank_highlight_color = "rgba(160, 160, 160, 155)"


